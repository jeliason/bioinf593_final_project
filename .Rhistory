knitr::opts_chunk$set(echo = TRUE)
library(spatstat)
library(tidyverse)
library(lme4)
library(nlme)
library(mgcv)
library(gamm4)
# df = read_csv("data/CRC_master.csv")
df = read_csv("data/spots_nbhds_df.csv")
colnames(df)
df = df %>%
mutate(across(c(spot_id),factor)) %>%
rename_all(~str_replace_all(., " ", "_"))
View(df)
View(df)
df
# df = read_csv("data/CRC_master.csv")
df = read_csv("data/spots_nbhds_df.csv")
colnames(df)
df = df %>%
mutate(across(c(patient_id,spot_id),factor)) %>%
rename_all(~str_replace_all(., " ", "_"))
df
df
colnames(df)
# df = read_csv("data/CRC_master.csv")
df = read_csv("data/spots_nbhds_df.csv")
df = df %>%
mutate(across(c(patient_id,spot_id),factor)) %>%
rename_all(~str_replace_all(., " ", "_")) %>%
rename_all(~str_replace_all(., "+", "p"))
# df = read_csv("data/CRC_master.csv")
df = read_csv("data/spots_nbhds_df.csv")
df = df %>%
mutate(across(c(patient_id,spot_id),factor)) %>%
rename_all(~str_replace_all(., " ", "_")) %>%
rename_all(~str_replace_all(., "\+", "p"))
df = df %>%
mutate(across(c(patient_id,spot_id),factor)) %>%
rename_all(~str_replace_all(., " ", "_")) %>%
rename_all(~str_replace_all(., "\\+", "p"))
colnames(df)
df
# df = read_csv("data/CRC_master.csv")
df = read_csv("data/spots_nbhds_df.csv")
df = df %>%
mutate(across(c(patient_group,patient_id,spot_id),factor)) %>%
rename_all(~str_replace_all(., " ", "_")) %>%
rename_all(~str_replace_all(., "\\+", "p"))
colnames(df)
cols = colnames(df)
paste(cols[6:length(cols)], collapse='+')
paste(cols[6:length(cols)], collapse=' + ')
f = paste(cols[6:length(cols)], collapse=' + ')
f = paste0('patient_group ~ ',f)
f
?glmer
f = paste(cols[6:length(cols)], collapse=' + ')
f = paste0('patient_group ~ ',f,' + (1 | patient_id)' )
f
m <- glmer(f, data=df,family = binomial)
str2lang(f)
# df = read_csv("data/CRC_master.csv")
df = read_csv("data/spots_nbhds_df.csv")
# df = df %>%
# df = df %>%
#   mutate(across(c(groups,spots,patients,ClusterName),factor)) %>%
#   select(-`...1`) %>%
# df = df %>%
#   mutate(across(c(groups,spots,patients,ClusterName),factor)) %>%
#   select(-`...1`) %>%
#   rename_all(~str_replace_all(., " - ", "_")) %>%
#   rename_all(~str_replace_all(., " ", "_"))
df = df %>%
x
# df = read_csv("data/CRC_master.csv")
df = read_csv("data/spots_nbhds_df.csv")
df = df %>%
mutate(across(c(patient_group,patient_id,spot_id),factor)) %>%
rename_all(~str_replace_all(., " ", "_")) %>%
rename_all(~str_replace_all(., "\\+", "p")) %>%
rename_all(~str_replace_all(., "\\/",  ""))
df
cols = colnames(df)
f = paste(cols[6:length(cols)], collapse=' + ')
f = paste0('patient_group ~ ',f,' + (1 | patient_id)' )
str2lang(f)
m <- glmer(f, data=df,family = binomial)
f = paste(cols[6:length(cols)], collapse=' + ')
f = paste0('patient_group ~ ',f)
f.re = paste0(f,' + (1 | patient_id)')
m.glm = glm(f,data = df, family = binomial)
?glm
df
df$patient_group
summary(m.glm)
predict(m.glm, df, type="response")
colnames(df[,apply(df, 2, var, na.rm=TRUE) == 0])
colnames(df[,apply(df, 2, var) == 0])
apply(df,2,var)
apply(df[,data_cols],2,var)
data_cols = cols[6:length(cols)]
apply(df[,data_cols],2,var)
apply(df[,data_cols],2,var) == 0
predict(m.glm, df, type="response")
pred = predict(m.glm, df, type="response")
pred <= 1e-15
sum(pred <= 1e-15)
which(pred <= 1e-15)
which(pred == 1)
which(pred >= (1 = 1e-15))
which(pred >= (1 - 1e-15))
df = df[-c(1564,2171),]
m.glm = glm(f,data = df, family = binomial)
summary(m.glm)
f.re = paste0(f,' + (1 | patient_id)')
m <- glmer(f.re, data=df,family = binomial)
f = paste(cols[6:10], collapse=' + ')
f = paste0('patient_group ~ ',f)
f.re = paste0(f,' + (1 | patient_id)')
m.glm = glm(f,data = df, family = binomial)
summary(m.glm)
f.re = paste0(f,' + (1 | patient_id)')
m <- glmer(f.re, data=df,family = binomial)
# df = read_csv("data/CRC_master.csv")
df = read_csv("data/spots_nbhds_df.csv")
df = df %>%
mutate(across(c(patient_group,patient_id,spot_id),factor)) %>%
rename_all(~str_replace_all(., " ", "_")) %>%
rename_all(~str_replace_all(., "\\+", "p")) %>%
rename_all(~str_replace_all(., "\\/",  ""))
df = df[-c(1564,2171),] # these are outliers for binomial glm
cols = colnames(df)
data_cols = cols[6:length(cols)]
df = df %>%
mutate(across(data_cols,scale))
# df = read_csv("data/CRC_master.csv")
df = read_csv("data/spots_nbhds_df.csv")
df = df %>%
mutate(across(c(patient_group,patient_id,spot_id),factor)) %>%
rename_all(~str_replace_all(., " ", "_")) %>%
rename_all(~str_replace_all(., "\\+", "p")) %>%
rename_all(~str_replace_all(., "\\/",  ""))
df = df[-c(1564,2171),] # these are outliers for binomial glm
cols = colnames(df)
data_cols = cols[6:length(cols)]
df = df %>%
mutate(across(all_of(data_cols),scale))
df
f = paste(cols[6:10], collapse=' + ') # only using a subset
f = paste0('patient_group ~ ',f)
f.re = paste0(f,' + (1 | patient_id)')
m.glm = glm(f,data = df, family = binomial)
summary(m.glm)
m <- glmer(f.re, data=df,family = binomial)
summary(m)
f.re = paste0(f,' + (1 | patient_id ) + (1 | spot_id : patient_id)')
m <- glmer(f.re, data=df,family = binomial)
f.re = paste0(f,' + (1 | patient_id ) + (1 | patient_id : spot_id)')
m <- glmer(f.re, data=df,family = binomial)
pred = predict(m.glm, df, type="response")
pred
?predict
# f.re = paste0(f,' + (1 | patient_id ) + (1 | patient_id : spot_id)')
f.re = paste0(f,' + (1 | spot_id )')
m <- glmer(f.re, data=df,family = binomial)
# f.re = paste0(f,' + (1 | patient_id ) + (1 | patient_id : spot_id)')
f.re = paste0(f,' + (1 | patient_id )')
m <- glmer(f.re, data=df,family = binomial)
summary(m)
f.re = 'patient_group ~ (1 + tumor_cells + vasculature + stroma | patient_id )'
m <- glmer(f.re, data=df,family = binomial)
f.re = 'patient_group ~ (1 + tumor_cells | patient_id )'
m <- glmer(f.re, data=df,family = binomial)
f.re = 'patient_group ~ (1 + vasculature | patient_id )'
m <- glmer(f.re, data=df,family = binomial)
f.re = 'patient_group ~ (1 | patient_id )'
m <- glmer(f.re, data=df,family = binomial)
summary(m)
f.re = 'patient_group ~ (1 | spot_id ) + (1 | spot_id : patient_id'
m <- glmer(f.re, data=df,family = binomial)
f.re = 'patient_group ~ (1 | spot_id ) + (1 | spot_id : patient_id)'
m <- glmer(f.re, data=df,family = binomial)
summary(m)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
get.diff.pairs = function(x) {
t = pairwise.wilcox.test(x$campp_median,x$cell_type,exact = F)$p.value
types = which(t < 0.05,arr.ind = T, useNames = F)
cols = colnames(t)
rows = rownames(t)
pairs = cbind(rows[types[,1]],cols[types[,2]])
pairs
}
df = read_csv('data/importance_scores_group_prediction.csv') %>%
select(-`...1`)
get.diff.pairs = function(x) {
t = pairwise.t.test(x$campp_median,x$cell_type)$p.value
types = which(t < 0.05,arr.ind = T, useNames = F)
cols = colnames(t)
rows = rownames(t)
pairs = cbind(rows[types[,1]],cols[types[,2]])
pairs
}
pairwise.spots = df %>%
group_by(spot_id) %>%
group_map(~get.diff.pairs(.x))
pairwise.patients = df %>%
group_by(patient_id) %>%
group_map(~get.diff.pairs(.x))
pairwise.groups = df %>%
group_by(patient_group) %>%
group_map(~get.diff.pairs(.x))
pairwise.spots
pairwise.patients
f.vals.patients
f.vals.patients = df %>%
group_by(patient_id) %>%
group_map(~{
summary(aov(.x$campp_median ~ .x$cell_type))[[1]][["Pr(>F)"]][[1]]
})
f.vals.patients
pairwise.spots
pairwise.spots[[1]]
pairwise.spots[[33]]
df %>%
filter(spot_id == 32) %>%
select(campp_median) %>%
mean()
df %>%
filter(spot_id == 32) %>%
select(campp_median)
?mean
df %>%
filter(spot_id == 32) %>%
select(campp_median) %>%
{is.na(.)}
df %>%
filter(spot_id == 32) %>%
select(campp_median) %>%
{is.na(.)} %>%
sum
df %>%
filter(spot_id == 32) %>%
select(campp_median) %>%
mean
df %>%
filter(spot_id == 32) %>%
select(campp_median) %>%
colMeans
df %>%
filter(spot_id == 32) %>%
filter(cell_type == 'tumor cell') %>%
select(campp_median) %>%
colMeans
df %>%
filter(spot_id == 32) %>%
filter(cell_type == 'tumor cell')
df %>%
filter(spot_id == 32)
df %>%
filter(spot_id == 32) %>%
select(cell_type) %>%
distinct
df %>%
filter(spot_id == 32) %>%
select(cell_type) %>%
unique
df %>%
filter(spot_id == 32) %>%
distinct(cell_type)
df %>%
filter(spot_id == 32) %>%
distinct(cell_type) %>% pull
?pull
df %>%
filter(spot_id == 32) %>%
# distinct(cell_type) %>% pull
filter(cell_type == 'tumor cells') %>%
select(campp_median) %>%
colMeans
df %>%
filter(spot_id == 32) %>%
# distinct(cell_type) %>% pull
filter(cell_type != 'tumor cells') %>%
select(campp_median) %>%
colMeans
pairwise.spots[[33]]
get.diff.pairs = function(x) {
t = pairwise.wilcox.test(x$campp_median,x$cell_type,exact=F)$p.value
types = which(t < 0.05,arr.ind = T, useNames = F)
cols = colnames(t)
rows = rownames(t)
pairs = cbind(rows[types[,1]],cols[types[,2]])
pairs
}
pairwise.spots = df %>%
group_by(spot_id) %>%
group_map(~get.diff.pairs(.x))
pairwise.spots
pairwise.spots[[33]]
pairwise.patients = df %>%
group_by(patient_id) %>%
group_map(~get.diff.pairs(.x))
pairwise.patients
pairwise.spots[[1]]
pairwise.spots[[2]]
f.vals.spots = df %>%
group_by(spot_id) %>%
group_map(~{
summary(aov(.x$campp_median ~ .x$cell_type))[[1]][["Pr(>F)"]][[1]]
})
f.vals.spots
f.vals.spots > 0.05
which(f.vals.spots > 0.05)
pairwise.spots[[which(f.vals.spots > 0.05)]]
pairwise.spots[which(f.vals.spots > 0.05)]
dim(pairwise.spots[[1]])
which(sapply(pairwise.spots, function(spot) {
dim(spot)[0] > 0
}))
sapply(pairwise.spots, function(spot) {
dim(spot)[0] > 0
})
sapply(pairwise.spots, function(spot) {
dim(spot)[0]
})
sapply(1:length(pairwise.spots), function(sp) {
spot = pairwise.spots[[sp]]
dim(spot)[0]
})
sapply(1:length(pairwise.spots), function(sp) {
spot = pairwise.spots[[sp]]
dim(spot)[1]
})
which(sapply(pairwise.spots, function(spot) {
dim(spot)[1] > 0
}))
which(sapply(pairwise.spots, function(spot) {
dim(spot)[1] == 0
}))
which(sapply(pairwise.spots, function(spot) {
dim(spot)[1] == 0
}))
which(f.vals.spots > 0.05)
?wilcox.test
df %>%
wilcox.test(campp_median ~ cell_type | spot_id / patient_id / patient_group, exact = F)
wilcox.test(campp_median ~ cell_type | spot_id / patient_id / patient_group, data = df,exact = F)
df
df$patient_group
df$patient_id
df = read_csv('data/importance_scores_group_prediction.csv') %>%
select(-`...1`) %>%
mutate(across(c(patient_group,patient_id,spot_id),factor))
df
df = read_csv('data/importance_scores_group_prediction.csv') %>%
select(-`...1`) %>%
mutate(across(c(patient_group,patient_id,spot_id,cell_type),factor))
df
wilcox.test(campp_median ~ cell_type | spot_id / patient_id / patient_group, data = df,exact = F)
